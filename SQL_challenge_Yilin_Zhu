Q1.

SELECT COUNT(loanid)/COUNT(DISTINCT custid) AS AvgLoans
FROM all_loans;

Q2.

SELECT DISTINCT t1.custid AS CustomerId
FROM all_loans AS t1
WHERE t1.payoffdate < (SELECT approvedate
                       FROM all_loans AS t2
                       WHERE t1.custid = t2.custid
                       AND t1.loanid < t2.loanid);

Q3.

SELECT t1.custid AS customerId,
	     SUM(t2.totpaid) AS totalPaid
FROM all_loans AS t1
LEFT JOIN all_loanhist AS t2
ON t1.loanid = t2.loanid
WHERE extract(day FROM (age(t2.eowdate::date, (SELECT MIN(t3.approvedate)
				  	       FROM all_loans AS t3
                                               WHERE t3.custid = t1.custid)::date
                            )
                        )
	      ) < 180
GROUP BY t1.custid;

Q4.

SELECT T.custid AS customerId,
	     CONCAT(SUM(col1)/SUM(col2) * 100,"%") AS percentPrinciplal 
FROM
(
SELECT t1.loanid,
	     t1.custid,
       SUM(t2.totprincpaid) AS col1,
       SUM(DISTINCT t1.amount) AS col2
FROM all_loans AS t1
LEFT JOIN all_loanhist AS t2
ON t1.loanid = t2.loanid
WHERE EXTRACT(day FROM (age(t2.eowdate::date, (SELECT MIN(t3.approvedate)
				               FROM all_loans AS t3
                                               WHERE t3.custid = t1.custid)::date
			    )
	                )
	      ) < 180
OR EXTRACT(day FROM (age(t1.approvedate::date, (SELECT MIN(t3.approvedate)
					        FROM all_loans AS t3
                                                WHERE t3.custid = t1.custid)::date
		         )
		     )
	   ) < 180
GROUP BY custid, loanid
) AS T
GROUP BY T.custid;


## I'm not one hundred percent sure about methods dealing with timestamp in PostgreSQL. I think the method here 
## corresponding to the "DATEDIFF" method in MySQL.

